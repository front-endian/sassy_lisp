@import 'sassy_lisp';

Quote {
  Assert: function_eval((q 1 2 3));
  Expect: 1 2 3;
}

Single Line {
  Assert: function_eval(q 1 2 3);
  Expect: 1 2 3;
}

Multi Line {
  Assert: function_eval((q 1) (q 2));
  Expect: 2;
}

Math {
  Assert: function_eval((add 0.25 (multiply 4 (multiply 5 2)) 1.75));
  Expect: 42;
}

Booleans {
  Assert: function_eval((bool_and 7 (bool_or (bool_and 9 (bool_not true)) 12)));
  Expect: 12;
}

Globals {
  Assert: function_eval((global two 2) (add (add two 1) 1));
  Expect: 4;
}

Lambdas As Named Functions {
  Assert: function_eval(
            (global add_one ((value) (add value 1)))
            (global add_two ((value) (add_one (add_one value))))
            (add_two 1)
          );
  Expect: 3;
}

Lambdas As Arguments {
  Assert: function_eval(
            (global call_with_4 ((func) (func 4)))
            (global add_one ((value) (add value 1)))
            (call_with_4 add_one)
          );
  Expect: 5;
}

Parameters Take Precedence Over Globals  {
  Assert: function_eval(
            (global value 999)
            (global add_one ((value) (add value 1)))
            (add_one 1)
          );
  Expect: 2;
}

Parameters Take Precedence Over Globals  {
  Assert: function_eval(
            (global value 999)
            (global add_one ((value) (add value 1)))
            (add_one 1)
          );
  Expect: 2;
}
